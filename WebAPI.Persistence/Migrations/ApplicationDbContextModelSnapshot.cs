// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Persistence;

#nullable disable

namespace WebAPI.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Domain.Calificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alumno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Puntaje")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("calificaciones", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec099243-4c06-43ea-ade2-fc5305b0ad7c"),
                            Descripcion = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            FechaPublicacion = new DateTime(2024, 4, 26, 23, 25, 37, 831, DateTimeKind.Utc).AddTicks(1192),
                            Titulo = "Unbranded Steel Table"
                        },
                        new
                        {
                            Id = new Guid("0f41dbd4-32ca-4828-9060-2670ba567dc3"),
                            Descripcion = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            FechaPublicacion = new DateTime(2024, 4, 26, 23, 25, 37, 831, DateTimeKind.Utc).AddTicks(1215),
                            Titulo = "Ergonomic Frozen Towels"
                        },
                        new
                        {
                            Id = new Guid("01a86c75-5e4a-47ab-8695-913fadee17fb"),
                            Descripcion = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            FechaPublicacion = new DateTime(2024, 4, 26, 23, 25, 37, 831, DateTimeKind.Utc).AddTicks(1234),
                            Titulo = "Practical Cotton Shirt"
                        },
                        new
                        {
                            Id = new Guid("74dfabca-eb45-4acc-a23e-bd2e1045f557"),
                            Descripcion = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            FechaPublicacion = new DateTime(2024, 4, 26, 23, 25, 37, 831, DateTimeKind.Utc).AddTicks(1254),
                            Titulo = "Refined Soft Towels"
                        },
                        new
                        {
                            Id = new Guid("781f5eae-3f9e-4d20-a5de-5bb726bc0eab"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2024, 4, 26, 23, 25, 37, 831, DateTimeKind.Utc).AddTicks(1271),
                            Titulo = "Unbranded Wooden Mouse"
                        },
                        new
                        {
                            Id = new Guid("3a8ab74b-15bf-41b0-a5aa-3d5ee242d356"),
                            Descripcion = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            FechaPublicacion = new DateTime(2024, 4, 26, 23, 25, 37, 831, DateTimeKind.Utc).AddTicks(1288),
                            Titulo = "Practical Wooden Soap"
                        },
                        new
                        {
                            Id = new Guid("3210950c-b624-40b6-a21b-9295678b68b4"),
                            Descripcion = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            FechaPublicacion = new DateTime(2024, 4, 26, 23, 25, 37, 831, DateTimeKind.Utc).AddTicks(1326),
                            Titulo = "Ergonomic Frozen Tuna"
                        },
                        new
                        {
                            Id = new Guid("b66ad4bf-20f0-4fbc-8d3b-ccc670ec8e20"),
                            Descripcion = "The Football Is Good For Training And Recreational Purposes",
                            FechaPublicacion = new DateTime(2024, 4, 26, 23, 25, 37, 831, DateTimeKind.Utc).AddTicks(1344),
                            Titulo = "Fantastic Concrete Gloves"
                        },
                        new
                        {
                            Id = new Guid("3cb36900-8db7-45dd-9bd3-ea7b9ab09c35"),
                            Descripcion = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            FechaPublicacion = new DateTime(2024, 4, 26, 23, 25, 37, 831, DateTimeKind.Utc).AddTicks(1360),
                            Titulo = "Sleek Soft Shirt"
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.CursoInstructor", b =>
                {
                    b.Property<Guid?>("InstructorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InstructorId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_instructores", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.CursoPrecio", b =>
                {
                    b.Property<Guid?>("PrecioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PrecioId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_precios", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Foto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CursoId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("imagenes", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("instructores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("66745964-313e-4cbe-9c9c-f513c4bc58b8"),
                            Apellidos = "Wehner",
                            Grado = "Direct Implementation Coordinator",
                            Nombre = "Isadore"
                        },
                        new
                        {
                            Id = new Guid("ce0ef028-2bf9-4e41-9263-7edfefacd874"),
                            Apellidos = "Franecki",
                            Grado = "Customer Web Administrator",
                            Nombre = "Ulises"
                        },
                        new
                        {
                            Id = new Guid("d2ea00d6-149a-441b-82d8-51cf2c8d52be"),
                            Apellidos = "Konopelski",
                            Grado = "Human Operations Strategist",
                            Nombre = "Nona"
                        },
                        new
                        {
                            Id = new Guid("cd9b0746-98d1-4dac-a2e6-b27f287e752d"),
                            Apellidos = "Lueilwitz",
                            Grado = "District Accounts Assistant",
                            Nombre = "Leatha"
                        },
                        new
                        {
                            Id = new Guid("cf0b978b-bdef-4243-b984-65a3f09eaf55"),
                            Apellidos = "Windler",
                            Grado = "Product Usability Engineer",
                            Nombre = "Catharine"
                        },
                        new
                        {
                            Id = new Guid("52323171-e60f-4a57-877c-eb08047648cc"),
                            Apellidos = "Witting",
                            Grado = "District Integration Producer",
                            Nombre = "Katrina"
                        },
                        new
                        {
                            Id = new Guid("087e0256-4e1f-4352-8de9-50bc6ef83bc6"),
                            Apellidos = "Hessel",
                            Grado = "Dynamic Identity Orchestrator",
                            Nombre = "Lavern"
                        },
                        new
                        {
                            Id = new Guid("fc700844-d0dc-479e-92ee-0dde90eaf962"),
                            Apellidos = "Wisozk",
                            Grado = "Central Solutions Strategist",
                            Nombre = "Elliott"
                        },
                        new
                        {
                            Id = new Guid("a8f3f0fe-e40f-4a33-a365-a3351bb50db9"),
                            Apellidos = "Dooley",
                            Grado = "Global Configuration Developer",
                            Nombre = "Orie"
                        },
                        new
                        {
                            Id = new Guid("2dc71dc5-745c-4165-8686-d1a27ac7d800"),
                            Apellidos = "Watsica",
                            Grado = "Lead Branding Architect",
                            Nombre = "Salvatore"
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Precio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("PrecioActual")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PrecioPromocion")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("precios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e742b3c4-0e54-4f81-9929-c3dd3a8dfbff"),
                            Nombre = "Precio Regular",
                            PrecioActual = 10.0m,
                            PrecioPromocion = 8.0m
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Calificacion", b =>
                {
                    b.HasOne("WebAPI.Domain.Curso", "Curso")
                        .WithMany("Calificaciones")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("WebAPI.Domain.CursoInstructor", b =>
                {
                    b.HasOne("WebAPI.Domain.Curso", "Curso")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Domain.Instructor", "Instructor")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("WebAPI.Domain.CursoPrecio", b =>
                {
                    b.HasOne("WebAPI.Domain.Curso", "Curso")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Domain.Precio", "Precio")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("PrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("WebAPI.Domain.Foto", b =>
                {
                    b.HasOne("WebAPI.Domain.Curso", "Curso")
                        .WithMany("Fotos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("WebAPI.Domain.Curso", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("CursoInstructores");

                    b.Navigation("CursoPrecios");

                    b.Navigation("Fotos");
                });

            modelBuilder.Entity("WebAPI.Domain.Instructor", b =>
                {
                    b.Navigation("CursoInstructores");
                });

            modelBuilder.Entity("WebAPI.Domain.Precio", b =>
                {
                    b.Navigation("CursoPrecios");
                });
#pragma warning restore 612, 618
        }
    }
}
